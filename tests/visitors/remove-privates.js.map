{"version":3,"file":"remove-privates.js","sourceRoot":"","sources":["remove-privates.ts"],"names":[],"mappings":";;AAAA,iCAAiC;AAIjC,kBAAe,IAAI;IAER,MAAM,CAAC,IAAa;QAEvB,MAAM,CAAC,IAAI,CAAC,IAAI,KAAK,EAAE,CAAC,UAAU,CAAC,mBAAmB,IAAI,IAAI,CAAC,SAAS;eACrE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,EAAE,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;IACzE,CAAC;IAEM,KAAK,CAAC,IAAyB,EAAE,OAA8B,EAAE,QAAiD;QAErH,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,MAAM,EAAE,EAAE,EAAE,CAAC,CAAC;IACxD,CAAC;CACJ,CAAA","sourcesContent":["import * as ts from 'typescript';\nimport * as tspoon from '@brad-jones/tspoon';\n\n// a simple proof of concept transformation, that deletes private class properties.\nexport default new class implements tspoon.Visitor\n{\n    public filter(node: ts.Node): boolean\n    {\n        return node.kind === ts.SyntaxKind.PropertyDeclaration && node.modifiers\n        && node.modifiers.some(m => m.kind === ts.SyntaxKind.PrivateKeyword);\n    }\n\n    public visit(node: ts.ClassDeclaration, context: tspoon.VisitorContext, traverse: (...visitors: tspoon.Visitor[]) => void)\n    {\n        context.replace(node.getStart(), node.getEnd(), '');\n    }\n}\n"]}